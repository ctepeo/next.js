import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';

import { Providers } from '@/providers';
import '@/styles/globals.css';
import { setRequestLocale } from 'next-intl/server';
import { hasLocale } from 'next-intl';
import { i18nRouting } from '@/lib/i18n.lib';
import { notFound } from 'next/navigation';
import { TAppRequestParams } from '@/types/request.types';
import { ReactNode } from 'react';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export async function generateStaticParams() {
  return [{ lang: 'en' }, { lang: 'de' }];
}

export default async function RootLayout({ children, params }: Readonly<{ children: ReactNode; params: Promise<TAppRequestParams> }>) {
  const { locale } = await params;
  if (!hasLocale(i18nRouting.locales, locale)) {
    notFound();
  }

  // Enable static rendering
  setRequestLocale(locale);

  return (
    <html suppressHydrationWarning lang={locale}>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Providers>{children}</Providers>
      </body>
    </html>
  );
}
